###album catalog: cellcanvas

from album.runner.api import setup, get_data_path, get_args

env_file = """name: segmentation-env
channels:
  - conda-forge
  - defaults
dependencies:
  - python=3.10
  - scikit-learn==1.3.2
  - joblib
  - numpy
  - zarr
  - pip
"""

def run():
    import os
    import joblib
    import numpy as np
    import zarr

    def load_model(model_path):
        """Load the random forest model from a joblib file."""
        return joblib.load(model_path)

    def apply_model_to_entire_embeddings(embeddings_path, model, output_path):
        """Load entire embeddings from Zarr, apply the model, and save transposed predictions to a new Zarr file."""
        # Load the entire embeddings
        zarr_embeddings = zarr.open(embeddings_path, mode='r')
        embeddings = np.array(zarr_embeddings[:])

        # Reshape for prediction and adjust dimensions
        predictions = model.predict(embeddings.reshape(-1, embeddings.shape[-1])).reshape(embeddings.shape[:-1])

        # Transpose predictions to correct axes ordering
        predictions_transposed = np.transpose(predictions, (2, 1, 0))  # Adjust this based on your data's orientation

        # Create or open the output Zarr file and write the transposed predictions
        output_zarr = zarr.open(output_path, shape=predictions_transposed.shape, dtype=int, mode='w')
        output_zarr[:] = predictions_transposed

    # Paths and model loading
    embeddings_path = get_args().zarrembedding
    model_path = get_args().modelpath
    output_path = get_args().zarroutput

    model = load_model(model_path)
    apply_model_to_entire_embeddings(embeddings_path, model, output_path)

    print(f"Segmentation output saved to {output_path}")

setup(
    group="cellcanvas",
    name="segment-tomogram",
    version="0.0.4",
    title="Segmentation using Random Forest on Embeddings in Chunks",
    description="Apply a Random Forest model to embeddings generated by TomoTwin to produce segmentation output, processing in chunks.",
    solution_creators=["Kyle Harrington"],
    cite=[{"text": "CellCanvas team.", "url": "https://cellcanvas.org"}],
    tags=["segmentation", "random forest", "machine learning", "cryoet", "chunks"],
    license="MIT",
    covers=[],
    album_api_version="0.5.1",
    args=[
        {"name": "zarrembedding", "type": "string", "required": True, "description": "Path to the input Zarr file containing embeddings"},
        {"name": "zarroutput", "type": "string", "required": True, "description": "Path for the output Zarr file containing segmentation"},
        {"name": "modelpath", "type": "string", "required": True, "description": "Path to the joblib file containing the trained Random Forest model"},
    ],
    run=run,
    dependencies={
        "environment_file": env_file
    },
)
